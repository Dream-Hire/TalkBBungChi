services:
  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/talkbbungchi
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: userpw
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/talkbbungchi

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    networks:
      - app-network

  nginx:
    build:
      context: ./frontend
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpw
      MYSQL_DATABASE: talkbbungchi
      MYSQL_USER: user
      MYSQL_PASSWORD: userpw
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-sql:/docker-entrypoint-initdb.d
    networks:
      - app-network

  mongo:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpw
      MONGO_INITDB_DATABASE: talkbbungchi
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

volumes:
  mysql_data:
  mongodb_data:

networks:
  app-network:
